#!/usr/bin/env perl
use strict; # norme d'évaluation des termes plus strict
use warnings; # warnings suplémentaires

use Socket;
use File::Basename;
use Cwd;
use IO::Handle;
use POSIX ":sys_wait_h";

my $cpt = 0;
my $flag = 0;

(my $port, my $rootdir, my $index, my $cgidir, my $maxclients) = Sioux::chargerLaConf();

socket (SERVEUR, PF_INET, SOCK_STREAM, getprotobyname('tcp'));
setsockopt (SERVEUR, SOL_SOCKET, SO_REUSEADDR, 1);
my $mon_adresse = sockaddr_in ("$port", INADDR_ANY);
bind(SERVEUR, $mon_adresse) || die ("bind");
listen (SERVEUR, SOMAXCONN) || die ("listen");

my $nbClients = 0;

$SIG{CHLD} = 'deces';

sub deces {
  $flag = 1;
}

while(1) {
  if ($flag == 1) {
    $flag = 0;

    $cpt = 0;
    while($cpt < $nbClients) {
      if(waitpid(-1, WNOHANG)>0) {
        $nbClients--;
      } else {
        $cpt++;
      }
    }
  }
  while (accept (CLIENT, SERVEUR)) {

    if($nbClients < $maxclients) {
      $nbClients++;

      my $pid = fork;
      if ($pid == 0) {
        my $req=<CLIENT>;
        chomp($req);
        (my $methode, my $ressource, my $protocole)=split(/ /, $req);
        chop($protocole);

        unless ($methode eq "GET") {
          print CLIENT Sioux::enTete(Sioux::code('400'), 'text/html');
          print CLIENT Sioux::contentPage('400');
          exit;
        }

        unless ($protocole eq "HTTP/1.0") {
          print CLIENT Sioux::enTete(Sioux::code('505'), 'text/html');
          print CLIENT Sioux::contentPage('505');
          exit;
        }

        if(-d $rootdir.$ressource) {
          chdir($rootdir.$ressource);
        } else {
          chdir(dirname($rootdir.$ressource));
        }

        unless (getcwd()=~/$rootdir/) {
          print CLIENT Sioux::enTete(Sioux::code('400'), 'text/html');
          print CLIENT Sioux::contentPage('400');
        } else {
          my $pagedepart;
          my @dos;
          my $fichier = $rootdir.$ressource;
          if ($ressource =~ /\/$/) {
            print CLIENT Sioux::enTete(Sioux::code('200'), 'text/html');
            if(-e $rootdir."/".$index) {
              $pagedepart = $rootdir."/".$index;
              open(OUT,$pagedepart);
              while(<OUT>) {
                print CLIENT $_;
              }
              close(OUT);
            } else {
              $pagedepart = $fichier;
              opendir(DOSSIER,$pagedepart);
              @dos = readdir DOSSIER;
              foreach(sort @dos){
                print CLIENT '<a href="'.$_.'">'.$_.'</a><br />' unless $_ eq "." || $_ eq "..";
              }
            }
          } else {
            if ($ressource =~ /\.cgi/) {
              my @ress = split(/\?/, $ressource);
              my @tout = split("&",$ress[1]);

              my $scriptCgi=$ress[0];
              $scriptCgi=~s~ (.*)~$1~;

              open(SCRIPT,"perl $cgidir$scriptCgi @tout |");
              while(<SCRIPT>){
                print CLIENT $_;
              }
              close(SCRIPT);
            } else {
              if (-d $fichier) {
                print CLIENT Sioux::enTete(Sioux::code('200'), 'text/html');
                opendir(DOSSIER,$fichier);
                @dos = readdir DOSSIER;
                foreach(sort @dos){
                  print CLIENT '<a href="'.$ressource."/".$_.'">'.$_.'</a><br />' unless $_ eq ".";
                }
                close(DOSSIER);
              } elsif (-e $fichier) {
                my $ext = $fichier;
                $ext =~ s/(.*)\.(.*)$/$2/;
                print CLIENT Sioux::enTete(Sioux::code('200'), 'text/plain') if $ext eq "txt";
                print CLIENT Sioux::enTete(Sioux::code('200'), 'image/jpeg') if $ext eq "jpeg";
                print CLIENT Sioux::enTete(Sioux::code('200'), 'text/html') if $ext eq "html";
                open(OUT,$fichier);
                while(<OUT>){
                  print CLIENT $_;
                }
              } else {
                print CLIENT Sioux::enTete(Sioux::code('404'), 'text/html');
                print CLIENT Sioux::contentPage('404');
              }
            }
          }
        }
        close (CLIENT);
        exit;

      } elsif ($pid != 0) {
        close (CLIENT);
      }
    } else {
      # maxclients atteint
      print CLIENT Sioux::enTete(Sioux::code('403'), 'text/html');
      print CLIENT Sioux::contentPage('403');
      close(CLIENT);
    }
  }
}
close(SERVEUR);
